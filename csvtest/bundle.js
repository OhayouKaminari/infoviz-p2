(function (d3, topojson) {
  'use strict';

  const svg = d3.select('svg');

  const projection = d3.geoNaturalEarth1();
  const pathGenerator = d3.geoPath().projection(projection);		//.method(variable);

  const g = svg.append('g');

  g.append('path')
  	.attr('class', 'sphere')
  	.attr('d', pathGenerator({type: 'Sphere'}));

  svg.call(d3.zoom().on('zoom', () => {
    g.attr('transform',d3.event.transform);
  }));

  Promise.all([
    d3.tsv('https://unpkg.com/world-atlas@1.1.4/world/50m.tsv'),
  	d3.json('https://unpkg.com/world-atlas@1.1.4/world/50m.json')
  ]).then(([tsvData,topoJSONdata]) => {
    
    const countryName = tsvData.reduce((accumulator,d) => {
      accumulator[d.iso_n3] = d.name;
      return accumulator;
    }, {});
    
    /*
    const countryName = {};
    tsvData.forEach(d => {
      countryName[d.iso_n3] = d.name;
    });
    */
    
    const countries = topojson.feature(topoJSONdata, topoJSONdata.objects.countries);
    g.selectAll('path').data(countries.features)
      .enter().append('path')
        .attr('class', 'country')
        .attr('d', pathGenerator)
      .append('title')
        .text(d => countryName[d.id]);
  });

}(d3, topojson));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbGVjdCxqc29uLHRzdixnZW9QYXRoLGdlb05hdHVyYWxFYXJ0aDEsem9vbSxldmVudCB9IGZyb20gJ2QzJztcbmltcG9ydCB7IGZlYXR1cmUgfSBmcm9tICd0b3BvanNvbic7XG5cbmNvbnN0IHN2ZyA9IHNlbGVjdCgnc3ZnJyk7XG5cbmNvbnN0IHByb2plY3Rpb24gPSBnZW9OYXR1cmFsRWFydGgxKCk7XG5jb25zdCBwYXRoR2VuZXJhdG9yID0gZ2VvUGF0aCgpLnByb2plY3Rpb24ocHJvamVjdGlvbik7XHRcdC8vLm1ldGhvZCh2YXJpYWJsZSk7XG5cbmNvbnN0IGcgPSBzdmcuYXBwZW5kKCdnJyk7XG5cbmcuYXBwZW5kKCdwYXRoJylcblx0LmF0dHIoJ2NsYXNzJywgJ3NwaGVyZScpXG5cdC5hdHRyKCdkJywgcGF0aEdlbmVyYXRvcih7dHlwZTogJ1NwaGVyZSd9KSk7XG5cbnN2Zy5jYWxsKHpvb20oKS5vbignem9vbScsICgpID0+IHtcbiAgZy5hdHRyKCd0cmFuc2Zvcm0nLGV2ZW50LnRyYW5zZm9ybSk7XG59KSk7XG5cblByb21pc2UuYWxsKFtcbiAgdHN2KCdodHRwczovL3VucGtnLmNvbS93b3JsZC1hdGxhc0AxLjEuNC93b3JsZC81MG0udHN2JyksXG5cdGpzb24oJ2h0dHBzOi8vdW5wa2cuY29tL3dvcmxkLWF0bGFzQDEuMS40L3dvcmxkLzUwbS5qc29uJylcbl0pLnRoZW4oKFt0c3ZEYXRhLHRvcG9KU09OZGF0YV0pID0+IHtcbiAgXG4gIGNvbnN0IGNvdW50cnlOYW1lID0gdHN2RGF0YS5yZWR1Y2UoKGFjY3VtdWxhdG9yLGQpID0+IHtcbiAgICBhY2N1bXVsYXRvcltkLmlzb19uM10gPSBkLm5hbWU7XG4gICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICB9LCB7fSk7XG4gIFxuICAvKlxuICBjb25zdCBjb3VudHJ5TmFtZSA9IHt9O1xuICB0c3ZEYXRhLmZvckVhY2goZCA9PiB7XG4gICAgY291bnRyeU5hbWVbZC5pc29fbjNdID0gZC5uYW1lO1xuICB9KTtcbiAgKi9cbiAgXG4gIGNvbnN0IGNvdW50cmllcyA9IGZlYXR1cmUodG9wb0pTT05kYXRhLCB0b3BvSlNPTmRhdGEub2JqZWN0cy5jb3VudHJpZXMpO1xuICBnLnNlbGVjdEFsbCgncGF0aCcpLmRhdGEoY291bnRyaWVzLmZlYXR1cmVzKVxuICAgIC5lbnRlcigpLmFwcGVuZCgncGF0aCcpXG4gICAgICAuYXR0cignY2xhc3MnLCAnY291bnRyeScpXG4gICAgICAuYXR0cignZCcsIHBhdGhHZW5lcmF0b3IpXG4gICAgLmFwcGVuZCgndGl0bGUnKVxuICAgICAgLnRleHQoZCA9PiBjb3VudHJ5TmFtZVtkLmlkXSk7XG59KTsiXSwibmFtZXMiOlsic2VsZWN0IiwiZ2VvTmF0dXJhbEVhcnRoMSIsImdlb1BhdGgiLCJ6b29tIiwiZXZlbnQiLCJ0c3YiLCJqc29uIiwiZmVhdHVyZSJdLCJtYXBwaW5ncyI6Ijs7O0VBR0EsTUFBTSxHQUFHLEdBQUdBLFNBQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQzs7RUFFMUIsTUFBTSxVQUFVLEdBQUdDLG1CQUFnQixFQUFFLENBQUM7RUFDdEMsTUFBTSxhQUFhLEdBQUdDLFVBQU8sRUFBRSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQzs7RUFFdkQsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQzs7RUFFMUIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7SUFDZCxJQUFJLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQztJQUN2QixJQUFJLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7O0VBRTdDLEdBQUcsQ0FBQyxJQUFJLENBQUNDLE9BQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTTtJQUMvQixDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQ0MsUUFBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0dBQ3JDLENBQUMsQ0FBQyxDQUFDOztFQUVKLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFDVkMsTUFBRyxDQUFDLG1EQUFtRCxDQUFDO0dBQ3pEQyxPQUFJLENBQUMsb0RBQW9ELENBQUM7R0FDMUQsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxLQUFLOztJQUVsQyxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsS0FBSztNQUNwRCxXQUFXLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7TUFDL0IsT0FBTyxXQUFXLENBQUM7S0FDcEIsRUFBRSxFQUFFLENBQUMsQ0FBQzs7Ozs7Ozs7O0lBU1AsTUFBTSxTQUFTLEdBQUdDLGdCQUFPLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDeEUsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQztPQUN6QyxLQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO1NBQ3BCLElBQUksQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDO1NBQ3hCLElBQUksQ0FBQyxHQUFHLEVBQUUsYUFBYSxDQUFDO09BQzFCLE1BQU0sQ0FBQyxPQUFPLENBQUM7U0FDYixJQUFJLENBQUMsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztHQUNuQyxDQUFDOzs7OyJ9